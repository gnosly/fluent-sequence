package com.gnosly.fluentsequence

import com.gnosly.fluentsequence.api.FluentSequence
import com.gnosly.fluentsequence.api.FluentSequence.FluentActor

object Main {
	def main(args: Array[String]): Unit = {
		val user = new FluentActor("user")
		val meta = new FluentActor("meta")
		val mss = new FluentActor("mss")
		val janine = new FluentActor("janine")
		val msr = new FluentActor("msr")
		val opco = new FluentActor("opco")

		FluentSequence.Sequence("mss tracking")
			.startWith(
				user.call("call", meta) ::
					meta.call("call", mss) ::
					mss.does("track searchId autogenerated")
						.and()
						.call("call", janine) ::
					janine.does("track requestId")
						.and().
						reply("trips with requestId", mss) ::
					mss.does("track searchId and janineId")
						.and().reply("trips with searchId", meta) ::
					meta.reply("trips", user) ::
					user.call("open deeplink", msr) ::
					msr.does("track janineId")
						.and()
						.reply("redirect to OPCO", user) ::
					user.call("open opco page", opco) ::
					opco.does("create the booking with janineId") ::
					Nil
			)
			.printToConsole()
	}
}
